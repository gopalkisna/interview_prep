Core Java
-----------------------------------------------------------------
    1.  OOPS Concepts - Encapsulation, Inheritance, Polymorphism, Abstraction
    2.  JIT compiler
    3.  String constant pool and heap portion
    4.  Shallow copy vs deep copy
    5.  Exception Handling - checked and unchecked exceptions
    6.  Threads, Threads Pool, race condition, deadlock, live lock
    7.  JDBC
    8.  Access modifiers
    9.  ConcurrentHashMap
    10. HashMap vs Hashset, custom hashmap, hashset etc.,
    11. equals and hashcode contract
    12. JVM
    13. Serializable vs Externalizable
    14. Inner class
    15. Generics
    16. Cloneable, Marker interface
    17. Immutable class and Custom Immutable class
    18. Wrapper class
    19. Ways to loop Hashmap
    20. Multithreading, Multiprogramming, Multiprocessing
    21. Mutex, Semaphores
    22. Comparator vs Comparable
    23. Java Memory model  
    24. Collection Framework
    25. Fail safe vs fail fast
    26. Runnable vs Callable
    27. JVM Internals
    28. StringBuilder vs StringBuffer

Java 8
-----------------------------------------------------------------
    1. Java Brains
    2. Streams
    3. lambdas
    4. Default, static 
    5. Functional Interfaces
    6. Optional


Java Design Patterns
-----------------------------------------------------------------

    1. Creational - How objects are created..
    2. Structural - How objects relate to each other..
    3. Behavioural - How objects communicate with each other..  Behavioral design patterns are concerned with algorithms and the assignment of responsibilities between objects.


Microservices Patterns
-----------------------------------------------------------------
    1. API gateway
    2. Circuit Breaker
    3. Saga 
    4. Event Sourcing
    5. Service Registry

    https://medium.com/capital-one-tech/10-microservices-design-patterns-for-better-architecture-befa810ca44e
    https://dzone.com/articles/design-patterns-for-microservices


Spring core
-----------------------------------------------------------------




Spring MVC
-----------------------------------------------------------------
    1. Bean scope
    2. Bean life cycle



Spring Boot
-----------------------------------------------------------------
    1. Spring vs Spring Boot
    2. Spring AOP
    3. Exception Handling
    4. Dependency Injection
    5. Exception Handler Advice
    6. Bean Life Cycle
    7. Bean Scopes
    8. Starters, starter-parent, Dependency Management, BOM
    9. Scheduler/Timer
    10. Transactional



Hibernate/Spring Data JPA
-----------------------------------------------------------------
    1. Lazy loading
    2. N+1 select problem
    3. Caching strategies



Must to go thru
-----------------
High level design

    1. URL Shortnener
    2. Youtube functionality
    3. News feed
    4. Twitter design
    5. Design a chat system
    6. Notification system
    7. Design google drive
    8. Design ecommerce



Low level design
-----------------------------------
    1. Amazon Prime Video Design
    2. Custom Hashmap
    3. Design cache functionality
    4. Elevator design
    5. Vending machine
    6. Parking lot
    7. Concurrent bookings



sql vs no-sql
------------------------------------
    1. ACID properties
    2. Isolation levels
    3. CAP theorem
    4. Clustered vs Non-Clusteres Indexes


Algos and DS
-------------------------------------
DS/Algos:
    1. Binary Search
    2. BFS/DFS
    3. Binary Trees
    4. Arrays
    5. Monotonic Stack
    6. Sliding Window
    7. Prefix Sum
    8. 2 Pointers



Docker/GKE
-----------



System Design Key Concepts
------------------
1. Scalability
2. Availability
3. CAP Theorem
4. ACID Transactions
5.Consistent Hashing
6. Rate Limiting
7. SPOF
8. Fault Tolerance
9. Consensus Algorithms
10. Gossip Protocol
11. Service Discovery
12. API Design
13. Disaster Recovery
14. Distributed Tracing


1. Content Delivery Network (CDN)
2. Proxy vs Reverse Proxy
3. Domain Name System (DNS)
4. Caching
5. Caching Strategies
6. Distributed Caching
7. Load Balancing
8. Databases Types
9. SQL vs NoSQL
10. Database Indexes
11. Consistency Patterns
12. HeartBeats
13. Circuit Breaker
14. Idempotency
15. Database Scaling
16. Data Replication
17. Data Redundancy
18. Database Sharding
19. Database Architectures
20. Failover
21. Bloom Filters
22. Message Queues
23. WebSockets
24. Checksums
25. API Gateway
26. Microservices Guidelines
27. Distributed Locking


System Design Tradeoffs
---------------------
1. Top 15 Tradeoffs
2. Vertical vs Horizontal Scaling
3. Stateful vs Stateless Design
4. Batch vs Stream Processing
5. Strong vs Eventual Consistency
6. Read-Through vs Write-Through Cache
7. Push vs Pull Architecture
8. Long-polling vs WebSockets
9. REST vs RPC
10. Synchronous vs. asynchronous communications
11. Latency vs Throughput


Salesforce Scaler guy feedback and comments
    Engineering blogs
    Reading text books
    Scaler index of things

    Referrals
    Ownership and getting the things done..
    DS Algo regular practice
    Learn Trie
    Go thru the JDs on the roles
    Skills of approaching 
